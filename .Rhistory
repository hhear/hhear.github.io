knitr::opts_chunk$set(echo = TRUE)
NYCBirthOutcomes <- read.csv("C:/Users/js5406/OneDrive - cumc.columbia.edu/SHARE_FILES/NYCBirthOutcomes.csv")
View(NYCBirthOutcomes)
plot(NYCBirthOutcomes$CADMIUM.COMPOUNDS, NYCBirthOutcomes$Preterm, xlab='Cadmium', ylab='Preterm Birth')
reg1<-lm(Preterm~CADMIUM.COMPOUNDS, data=NYCBirthOutcomes)
#Allows you to see the results of your linear regression.
summary(reg1)
#Run an adjusted linear regression model to see if accounting for the level of Medicaid and late prental care in a community changes the relationship between cadmium and preterm birth
reg2<-lm(Preterm~cadmium+Medicaid+LatePNC, data=NYCBirthOutcomes)
reg2<-lm(Preterm~CADMIUM.COMPOUNDS+Medicaid+LatePNC, data=NYCBirthOutcomes)
View(NYCBirthOutcomes)
reg2<-lm(Preterm~CADMIUM.COMPOUNDS+Medicaid+LatePTC, data=NYCBirthOutcomes)
summary(reg2)
reg3<-lm(Preterm~CADMIUM.COMPOUNDS, data=HighMedicaid)
HighMedicaid<-NYCBirthOutcomes[ which(NYCBirthOutcomes$Medicaid>50),]
reg3<-lm(Preterm~CADMIUM.COMPOUNDS, data=HighMedicaid)
summary(reg3)
plot(HighMedicaid$CADMIUM.COMPOUNDS, HighMedicaid$Preterm)
abline(reg2, col='blue')
reg2<-lm(Preterm~CADMIUM.COMPOUNDS+Medicaid+LatePTC, data=NYCBirthOutcomes)
summary(reg2)
abline(reg2, col='blue')
plot(HighMedicaid$CADMIUM.COMPOUNDS, HighMedicaid$Preterm)
abline(reg2, col='blue')
plot(NYCBirthOutcomes$CADMIUM.COMPOUNDS, NYCBirthOutcomes$Preterm, xlab='Cadmium', ylab='Preterm Birth')
abline(reg1, col='blue')
table1(~Preterm + CADMIUM.COMPOUNDS | data=NYCBirthOutcomes)
View(NYCBirthOutcomes)
install.packages("learnr")
library(readxl)
SSD_2016_1449 <- read_excel("C:/Users/js5406/Downloads/SSD-2016-1449.xlsx",
sheet = "SOC-1449-PSAMPLES")
View(SSD_2016_1449)
View(SSD_2016_1449)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
View(SSD_2016_1449)
View(SSD_2016_1449)
View(SSD_2016_1449)
SSD_2016_1449 %>% distinct(scopeID, timeScopeID, `rdf:type`)
View(SSD_2016_1449)
newdata<-SSD_2016_1449 %>% distinct(scopeID, timeScopeID, `rdf:type`)
View(newdata)
SSD_2016_1449_PSAMPLES <- read_excel("C:/Users/js5406/Downloads/SSD-2016-1449.xlsx",
sheet = "SOC-1449-PSAMPLES")
#Use of distinct will keep the first listed sample and remove any duplicates after
PSAMPLES.onespot<-SSD_2016_1449_PSAMPLES %>% distinct(scopeID, timeScopeID, `rdf:type`)
PSAMPLES.onespot<-SSD_2016_1449_PSAMPLES %>% distinct(scopeID, timeScopeID, `rdf:type`, keep_all=TRUE)
View(PSAMPLES.onespot)
PSAMPLES.onespot<-SSD_2016_1449_PSAMPLES %>% distinct(scopeID, timeScopeID, `rdf:type`, .keep_all = TRUE)
View(PSAMPLES.onespot)
View(SSD_2016_1449_PSAMPLES)
SID<-PSAMPLES.onespot[,originalID]
View(SSD_2016_1449_PSAMPLES)
SID<-PSAMPLES.onespot$originalID
write.csv(PSAMPLES.onespot, file="~/SSD-2016-1449-PSAMPLES-update.csv")
knitr::opts_chunk$set(echo = TRUE)
library(pcalg)
library("Rgraphviz")
data("gmG")
#Visualize true DAG
plot(gmG$g, main = "")
View(gmG8)
gmG8$x
library(readxl)
ces20updateoct2014 <- read_excel("C:/Users/js5406/OneDrive - cumc.columbia.edu/DSIL/ces20updateoct2014.xlsx")
View(ces20updateoct2014)
View(ces20updateoct2014)
library(readxl)
ces_short <- read_excel("C:/Users/js5406/OneDrive - cumc.columbia.edu/DSIL/ces_short.xlsx")
View(ces_short)
warnings()
View(ces_short)
ces_short$Hyperlink<-NULL
ces_short$`Census Tract`<-NULL
suffStat <- list(C = cor(ces_short), n = nrow(ces_short))
View(ces_short)
ces_short.new <- sapply( ces_short, as.numeric )
View(ces_short.new)
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.01, p = ncol(ces_short.new))
plot(skel.gmg)
View(ces_short.new)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.01)
plot(pc.fit, main = "")
View(pc.fit)
View(ces_short.new)
ces_short$`Solid Waste`<-NULL
ces_short.new <- sapply( ces_short, as.numeric )
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.01, p = ncol(ces_short.new))
plot(skel.gmg)
View(ces_short.new)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.01)
plot(pc.fit, main = "")
plot(pc.fit, main = "")
View(ces_short.new)
ces_short$`Groundwater Threats`<-NULL
ces_short.new <- sapply( ces_short, as.numeric )
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.01, p = ncol(ces_short.new))
plot(skel.gmg)
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.05, p = ncol(ces_short.new))
plot(skel.gmg)
View(ces_short.new)
ces_short.new<-complete.cases(ces_short.new)
ces_short.new <- sapply( ces_short, as.numeric )
ces_short.new<-na.omit(ces_short.new)
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.05, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.01)
plot(pc.fit, main = "")
View(ces_short.new)
View(ces_short.new)
View(ces_short.new)
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.01, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.01)
plot(pc.fit, main = "")
cor(ces_short)
cor(ces_short.new)
cor(ces_short.new, method="spearman")
ces_short$Ozone<-NULL
ces_short$Education<-NULL
ces_short$`Linguistic Isolation`<-NULL
ces_short.new <- sapply( ces_short, as.numeric )
ces_short.new<-na.omit(ces_short.new)
#The corresponding sufficient statistic consists of the correlation matrix of the data and the sample size. Based on this input, the
#function skeleton() estimates the skeleton of the causal structure. predefined function gaussCItest() is used for testing conditional #independence.
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.01, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.01)
plot(pc.fit, main = "")
View(ces_short.new)
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.001, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001)
plot(pc.fit, main = "")
View(ces_short)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001, order="stable")
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
fci.data<-fci(suffStat, indepTest = gaussCItest, alpha=0.9999, labels=colnames(ces_short.new))
fci.data
plot(fci.data)
plot(fci.data)
plot(fci.data)
plot(fci.data)
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.001, p = ncol(ces_short.new))
plot(skel.gmg)
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001)
plot(pc.fit, main = "")
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.0001, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.0001)
plot(pc.fit, main = "")
ces_short.new<-scale(ces_short.new)
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
fci.data<-fci(suffStat, indepTest = gaussCItest, alpha=0.9999, labels=colnames(ces_short.new))
plot(fci.data)
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.0001, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.0001)
plot(pc.fit, main = "")
View(ces_short.new)
cor(ces_short.new, method = "spearman")
ces_short.new<-ces_short.new[c(7,8,4, 1,2,3,6,5)]
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
ces_short.new <- sapply( ces_short, as.numeric )
ces_short.new<-na.omit(ces_short.new)
ces_short.new<-scale(ces_short.new)
ces_short.new<-ces_short.new[,c(7,8,4, 1,2,3,6,5)]
suffStat <- list(C = cor(ces_short.new), n = nrow(ces_short.new))
fci.data<-fci(suffStat, indepTest = gaussCItest, alpha=0.9999, labels=colnames(ces_short.new))
plot(fci.data)
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.0001, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.0001)
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.001, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001)
plot(pc.fit, main = "")
View(ces_short.new)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001, verbose=TRUE)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001, solve.confl = TRUE)
plot(pc.fit, main = "")
View(ces_short.new)
View(ces_short.new)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001, solve.confl = FALSE)
plot(pc.fit, main = "")
labels.ces<-c("Poverty", "Unemployment", "Med.Age", "PM2.5", "Water.Qual", "Pesticides", "LBW", "Asthma")
skel.gmg<-skeleton(suffStat, indepTest = gaussCItest, alpha=0.001, p = ncol(ces_short.new))
plot(skel.gmg)
pc.fit <- pc(suffStat, indepTest = gaussCItest, p = ncol(ces_short.new), alpha = 0.001, solve.confl = FALSE)
plot(pc.fit, main = "")
pc.fit <- pc(suffStat, indepTest = gaussCItest, labels=labels.ces, alpha = 0.001, solve.confl = FALSE)
plot(pc.fit, main = "")
plot(pc.fit, main = "")
pc.fit <- pc(suffStat, indepTest = gaussCItest, labels=labels.ces, alpha = 0.001, solve.confl = FALSE, u2pd=c("relaxed"))
plot(pc.fit, main = "")
pc.fit <- pc(suffStat, indepTest = gaussCItest, labels=labels.ces, alpha = 0.001, solve.confl = FALSE, u2pd=c("rand"))
plot(pc.fit, main = "")
pc.fit <- pc(suffStat, indepTest = gaussCItest, labels=labels.ces, alpha = 0.001, solve.confl = FALSE, u2pd=c("retry"))
plot(pc.fit, main = "")
pc.fit <- pc(suffStat, indepTest = gaussCItest, labels=labels.ces, alpha = 0.001, solve.confl = TRUE, u2pd=c("relaxed"))
plot(pc.fit, main = "")
pc.fit <- pc(suffStat, indepTest = gaussCItest, labels=labels.ces, alpha = 0.001, solve.confl = TRUE, u2pd=c("relaxed"))
plot(pc.fit, main = "")
knitr::opts_chunk$set(echo = TRUE)
NYCBirthOutcomes <- read.csv("C:/Users/js5406/OneDrive - cumc.columbia.edu/SHARE_FILES/NYCBirthOutcomes.csv")
#Create simple plot of pollutant versus outcome (Cadmium on x-axis and Preterm on y-axis)
plot(NYCBirthOutcomes$CADMIUM.COMPOUNDS, NYCBirthOutcomes$Preterm, xlab='Cadmium', ylab='Preterm Birth')
#Restrict population to only those who have high amounts of medicaid. Takes the medicaid variable (which is continuous) and only selects observations that have a value greater than 50%
HighMedicaid<-NYCBirthOutcomes[ which(NYCBirthOutcomes$Medicaid>50),]
#Run a simple linear regression model to see if a pollutant is associated with an outcome. In this case, looking at cadmium and preterm birth within communities.
reg1<-lm(Preterm~CADMIUM.COMPOUNDS, data=NYCBirthOutcomes)
#Allows you to see the results of your linear regression.
summary(reg1)
#Run an adjusted linear regression model to see if accounting for the level of Medicaid and late prental care in a community changes the relationship between cadmium and preterm birth
reg2<-lm(Preterm~CADMIUM.COMPOUNDS+Medicaid+LatePTC, data=NYCBirthOutcomes)
summary(reg2)
#Run a simple linear regression model to see if cadmium is associated with preterm birth but only looking at communities where Medicaid is high. Note that the dataset has changed (data=HighMedicaid) but all other parts of the code are the same. I also changed the object (reg3) where the results are stored so you can keep your previous results. If you kept the name reg1, you'd overwrite the previous model.
reg3<-lm(Preterm~CADMIUM.COMPOUNDS, data=HighMedicaid)
summary(reg3)
#Adding regression line to plot of cadmium vs preterm birth
plot(NYCBirthOutcomes$CADMIUM.COMPOUNDS, NYCBirthOutcomes$Preterm, xlab='Cadmium', ylab='Preterm Birth')
abline(reg1, col='blue')
View(NYCBirthOutcomes)
View(NYCBirthOutcomes)
reg1<-lm(Preterm~ARSENIC.COMPOUNDS.INORGANIC.INCLUDING.ARSINE., data=NYCBirthOutcomes)
summary(reg1)
reg2<-lm(Preterm~ARSENIC.COMPOUNDS.INORGANIC.INCLUDING.ARSINE.+Medicaid+LatePTC, data=NYCBirthOutcomes)
summary(reg2)
View(NYCBirthOutcomes)
View(NYCBirthOutcomes)
reg1<-lm(LBW~ARSENIC.COMPOUNDS.INORGANIC.INCLUDING.ARSINE., data=NYCBirthOutcomes)
#Allows you to see the results of your linear regression.
summary(reg1)
reg2<-lm(LBW~ARSENIC.COMPOUNDS.INORGANIC.INCLUDING.ARSINE.+Medicaid+LatePTC, data=NYCBirthOutcomes)
summary(reg2)
View(NYCBirthOutcomes)
plot(NYCBirthOutcomes$CADMIUM.COMPOUNDS, NYCBirthOutcomes$Preterm, xlab='Cadmium', ylab='Preterm Birth')
plot(NYCBirthOutcomes$CADMIUM.COMPOUNDS, NYCBirthOutcomes$Preterm, xlab='Cadmium', ylab='Preterm Birth')
abline(reg1, col='blue')
reg1<-lm(Preterm~CADMIUM.COMPOUNDS, data=NYCBirthOutcomes)
#Allows you to see the results of your linear regression.
summary(reg1)
plot(NYCBirthOutcomes$CADMIUM.COMPOUNDS, NYCBirthOutcomes$Preterm, xlab='Cadmium', ylab='Preterm Birth')
abline(reg1, col='blue')
reg3<-lm(Preterm~CADMIUM.COMPOUNDS, data=HighMedicaid)
summary(reg3)
powerEpi.default(36000, 1.14, 0.25, 0.1, 0.25, 0.05)
library(powerSurvEpi)
powerEpi.default(36000, 1.14, 0.25, 0.1, 0.25, 0.05)
powerEpiCont.default(36000, 1.04, 12, 0.1, 0.25, 0.05)
powerEpiCont.default(8000, 1.04, 12, 0.1, 0.25, 0.05)
powerEpi.default(35000, 1.19, 0.25, 0.1, 0.25, 0.05)
powerEpi.default(35000, 1.10, 0.25, 0.1, 0.25, 0.05)
powerEpi.default(35000, 1.13, 0.25, 0.1, 0.25, 0.05)
powerEpi.default(35000, 1.14, 0.25, 0.1, 0.25, 0.05)
install.packages("pwr")
library(pwr)
#Set our working directory.
setwd("C:/Users/js5406/Documents/HHEAR/hhear.github.io")
rmarkdown::render_site()
#Set our working directory.
setwd("C:/Users/js5406/Documents/HHEAR/hhear.github.io")
rmarkdown::render_site()
install.packages("prettydoc")
#Set our working directory.
setwd("C:/Users/js5406/Documents/HHEAR/hhear.github.io")
rmarkdown::render_site()
#Set our working directory.
setwd("C:/Users/js5406/Documents/HHEAR/hhear.github.io")
rmarkdown::render_site()
#Set our working directory.
setwd("C:/Users/js5406/Documents/HHEAR/hhear.github.io")
rmarkdown::render_site()
#Set our working directory.
setwd("C:/Users/js5406/Documents/HHEAR/hhear.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
